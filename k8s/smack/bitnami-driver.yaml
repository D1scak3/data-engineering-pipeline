apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: spark-driver

spec:
  serviceName: spark-driver
  replicas: 1
  selector:
    matchLabels:
      app: spark-driver

  template:
    metadata:
      labels:
        app: spark-driver

    spec:
      containers:
      - name: bitnami-spark
        image: bitnami/spark:3.3
        # args: ["/opt/spark/bin/pyspark"]
        # - "/bin/bash"
        # - "-c"
        # - "/opt/spark/bin/pyspark"
        env:
        - name: SPARK_MODE
          value: "master"
        - name: SPARK_PUBLIC_DNS
          value: "spark-driver-0.dpark-driver.spark-svc.cluster.local"
        - name: SPARK_RPC_AUTHENTICATION_ENABLED
          value: "no"
        - name: SPARK_RPC_ENCRYPTION_ENABLED
          value: "no"
        - name: SPARK_SSL_ENABLED
          value: "no"
        - name: "SPARK_DRIVER_HOST_IP"
          valueFrom:
            fieldRef:
              apiVersion: "v1"
              fieldPath: "status.hostIP"
        ports:
        - containerPort: 4040
        - containerPort: 7077
        - containerPort: 8080
      #   volumeMounts:
      #   - name: data
      #     mountPath: /data

      # volumes:
      # - name: data
      #   persistentVolumeClaim:
      #     claimName: spark-data
      #     storageClass: local-storage

  # volumeClaimTemplates:
  # - metadata:
  #     name: spark-data
  #   spec:
  #     accessModes: [ "ReadWriteOnce" ]
  #     resources:
  #       requests:
  #         storage: 1Gi

---

apiVersion: v1
kind: Service
metadata:
  name: spark-driver

spec:
  # type: LoadBalancer

  selector:
    app: spark-driver
  
  clusterIP: None

  ports:
    - name: http
      port: 8080
      targetPort: 8080
    - name: spark
      port: 7077
      targetPort: 7077
    - name: app
      port: 4040
      targetPort: 4040